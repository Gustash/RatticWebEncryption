from django.shortcuts import render
from django.http import HttpResponse, HttpResponseRedirect
from django.contrib.auth.decorators import login_required
from cred.models import CredTemp, Cred
from forms import CredTempForm
from django.core.urlresolvers import reverse
import logging

logger = logging.getLogger(__name__)

class DataCred:
	def __init__(self, cred, cred_temp):
		self.cred = cred
		self.cred_temp = cred_temp

@login_required
def index(request):
	temp_creds = CredTemp.objects.filter(user=request.user) 
        request_creds = Cred.objects.filter(id__in=temp_creds.values_list('cred_id', flat=True))
	
	data_cred = []

	for ct in temp_creds:
		for c in request_creds:
			if ct.cred_id == c.id and not c.is_deleted:
				data_cred.append(DataCred(c, ct))

	viewContext = {
	'title': 'Request',
	'data': data_cred 
	}
	return render(request, 'request.html', viewContext)

@login_required
def add(request):
	if request.method == "POST":
                logger.info(request.POST.get('user'))
                cred_temp = CredTemp(user=request.user)
		form = CredTempForm(request.POST, instance=cred_temp)
		if form.is_valid():
                        if not CredTemp.objects.filter(user=request.user, cred=request.POST.get('cred')):
 			    form.save()
			    return HttpResponseRedirect(reverse('request.views.index'))
	else:
		form = CredTempForm()
		logger.info(form.is_valid())
	return render(request, 'makeRequest.html', {'form': form})
